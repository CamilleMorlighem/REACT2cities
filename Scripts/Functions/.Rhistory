rm(list=ls())
# -------------------------------
#  Loads libraries
# -------------------------------
library(XLConnect)
library(sf)
library(utils)      #Malaria data
library(foreach)
library(raster)
# -------------------------------
library(spex)       #Prediction grid
# -------------------------------
library(dplyr)
library(exactextractr)
library(parallel)
library(doParallel) #Covariates extraction
library(iterators)
library(sp)
library(units)
library(plyr)
# -------------------------------
library(stats)
library(corrplot)   #Descriptive analysis
# -------------------------------
library(ggplot2)
library(mlr)        #RF modelling
library(parallelMap)
library(pdp)
# -------------------------------
library(ggpubr)     #BoxPlot results
# -------------------------------
library(stars)      #RF predictions
# -------------------------------
#  Unfixed parameters
# -------------------------------
# Define parallelization parameters
parallel::detectCores()
n_cores <- parallel::detectCores() - 3
my.cluster <- parallel::makeCluster(n_cores, type = "PSOCK")
# Register cluster to be used by %dopar%
doParallel::registerDoParallel(cl = my.cluster)
# Define cities
ssa_cities = list(c("Dar es salaam", "DES", 32737), c("Kampala", "Kamp", 32636))
# Define criteria for malaria surveys
max_age = 16 ; survey_date = c(2005,2016)
# Define aim(s) of covariates extraction: 1- "training" ; 2- "prediction" (both can be used)
aims = c("training", "prediction")
# Define mode:   1- All covariates without variable selection (ALL) ; 2- Implement a Variable selection : Recursive features selection (RFE)
cov_selection_mode = "RFE"
# Define random forest (RF) parameters for the spatial cross validation in mlr package
iters = 2 ; folds = 5 ; reps = 10 # value for the paper
# Define var group :  1 - All covariates from 3 geospatial datasets (all3Geo) - LU/LC, LCZ, COSMO ; 2 - Comparison of different geospatial datasets (GeoSpDt) ; 3 - Best variables in RFE models (BEST)
var_group_list = c("all3Geo", "GeoSpDt", "BEST") ; variables_group = var_group_list[3]
# Define best variables identified by RF modelling (only necessary if var_group is "BEST" or to run prediction script)
best_variables = list(c("LC_bare_ground","LC_trees","LC_water","LU_ACS","Dist_compact"), c("LU_informal","AVG_RH2M","AVG_TSI","Dist_water"))
# Define type(s) of RF models in boxplots : 1- "ALL" (boxplots with models based on all covariates) ; 2- "RFE" (boxplots based on RFE cov) ; 3- "ALL_RFE" (boxplots based on both) (all can be used)
rfe_mode_plot_list = c("ALL", "RFE", "ALL_RFE")
# -------------------------------
#  Loads paths
# -------------------------------
# Find main directory of the project
dirname(rstudioapi::getSourceEditorContext()$path)
Dir = dirname(rstudioapi::getSourceEditorContext()$path)
Dir = sub(pattern='/[^/]*$', "/", x=Dir)
# Define subdirectories
dir_malaria_data = paste0(Dir, "2_Results/2_1 Malaria_data/")
dir_pred_grid = paste(Dir, c("1_Data/1_3 Prediction_grid/"), sep="")
dir_geo_variables = paste(Dir, c("1_Data/1_2_Variables/"), sep="")
dir_covariates = paste(Dir, c("2_Results/2_2 Covariates/"), sep="")
dir_rf_models = paste(Dir, c("2_Results/2_3 RF_modelling/"), sep="")
dir_rf_pred =  paste0(Dir, c("2_Results/2_4 Prediction/"))
dir_admin_areas = paste0(Dir, c("1_Data/1_4 Admin/"))
# Define path to malaria DB
malaria_db = paste0(Dir, "1_Data/1_1 Malaria_data/Malaria_data_v1_SDJ_20200520.xlsx")
# Load functions
invisible(sapply(list.functions<-list.files(file.path(paste0(Dir,"/3_Scripts/Functions/")), full.names=TRUE), source))
